version: 2.1

aliases:
  - &workspace
      ~/circleci-test

executors:
  macos-ios-executor-xcode11:
    machine:
      image: ubuntu-1604:201903-01
    parameters:
      executor_env_var_1:
        type: string
        default: "Executor env var 1"
      executor_env_var_2:
        type: string
        default: "Executor env vars 2"
    environment:
      EXC_ENV_VAR_3: << parameters.executor_env_var_1 >>
      EXC_ENV_VAR_4: << parameters.executor_env_var_2 >>
      EXC_ENV_VAR_5: 10
    working_directory: *workspac e

commands:
  test_command_1:
    description: Test command 1 description
    parameters:
      run_param:
        type: string
        default: none
    steps:
      - checkout
      - run:
          name: "Test command 1 run 1 name"
          command: |
            echo "Test command"
      - when:
          condition:
            equal: [ "1.5", <<parameters.run_param>> ]
          steps:
            - run: echo "Condition true"
      - run: echo "After condition"
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_2:
    description: Test command 2 description
    parameters:
      run_param:
        type: string
        default: none
    steps:
      - run:
          command: |
            if [ "<<parameters.run_param>>" = "1.6" ]; then
              echo "Condition true"
            fi
          shell: /bin/bash
#      - next_test_step
#      - run:
#          name: "Next step with 'when: always'"
#          command: |
#            echo "Next test step with 'when: always'"
#          when: always

  test_command_3:
    description: Test environment variables from job and executor
    parameters:
      run_param:
        type: string
        default: none
    steps:
      - run:
          command: |
            if [ "<<parameters.run_param>>" = "1.6" ]; then
              echo "Condition true"
            fi
          shell: /bin/bash
#      - next_test_step
#      - run:
#          name: "Next step with 'when: always'"
#          command: |
#            echo "Next test step with 'when: always'"
#          when: always

  test_command_4:
    description: Test command 4 description
    parameters:
      run_param:
        type: string
        default: none
    steps:
      - run:
          name: "Test command 1 run 1 name"
          command: |
            echo "Test command"
      - when:
          condition:
            equal: [ 1.5, <<parameters.run_param>> ]
          steps:
            - run: echo "Condition true"
      - run: echo "After condition"
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_5:
    description: Test command 5 description
    steps:
      - run:
          name: "Test command 5"
          command: |
            set -e
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
          shell: /bin/bash
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_6:
    description: Test command 6 description
    steps:
      - checkout
      - run:
          name: "Test command 6"
          command: |
            set -e
            echo "executor var 1: $executor_env_var_1"
            echo "executor var 2: $executor_env_var_2"
            echo "executor var 3: $EXC_ENV_VAR_3"
            echo "executor var 4: $EXC_ENV_VAR_4"
            echo "executor var 5: $EXC_ENV_VAR_5"

            echo "job var 1: $JOB_ENV_VAR_1"
            echo "job var 2: $JOB_ENV_VAR_2"
            echo "job var 3: $JOB_ENV_VAR_3"
            echo "job var 4: $JOB_ENV_VAR_4"
            echo "job var 5: $JOB_ENV_VAR_5"
            echo "job var 6: $JOB_ENV_VAR_6"
            echo "job var 7: $JOB_ENV_VAR_7"

            export STEP_ENV_VAR_1="step env var 1"
            echo "export STEP_ENV_VAR_2='step env var 2'" >> $BASH_ENV

            chmod +x ./scripts/test_script.sh
            ./scripts/test_script.sh

            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_7:
    description: Test command 7 description
    steps:
      - run:
          name: "Test command 7"
          command: |
            set -eo pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
          shell: /bin/bash
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_8:
    description: Test command 8 description
    steps:
      - run:
          name: "Test command 8"
          command: |
            set -eo pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_9:
    description: Test command 9 description
    steps:
      - run:
          name: "Test command 1"
          command: |
            set +eo pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
          shell: /bin/bash
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_10:
    description: Test command 10 description
    steps:
      - run:
          name: "Test command 1"
          command: |
            set +eo pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_11:
    description: Test command 11 description
    steps:
      - run:
          name: "Test command 1"
          command: |
            set -o pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
          shell: /bin/bash
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_12:
    description: Test command 12 description
    steps:
      - run:
          name: "Test command 1"
          command: |
            set -o pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_13:
    description: Test command 13 description
    steps:
      - run:
          name: "Test command 1"
          command: |
            set +o pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
          shell: /bin/bash
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  test_command_14:
    description: Test command 14 description
    steps:
      - run:
          name: "Test command 1"
          command: |
            set +o pipefail
            echo "one"
            dateq
            echo "two"
            dateq
            echo "three"
            dateq
      - next_test_step
      - run:
          name: "Next step with 'when: always'"
          command: |
            echo "Next test step with 'when: always'"
          when: always

  next_test_step:
    description: The next test step
    steps:
      - run:
          name: "The next test step"
          command: |
            echo "Next test step"

jobs:
  test_1:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 1 name"
          command: |
            echo "Test job 1"
          shell: /bin/bash
      - test_command_1:
          run_param: "1.5"

  test_1_1:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 1 name"
          command: |
            echo "Test job 1"
          shell: /bin/bash
      - test_command_1:
          run_param: "2"

  test_1_2:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 1 name"
          command: |
            echo "Test job 1"
          shell: /bin/bash
      - test_command_1:
          run_param: "3"

  test_1_3:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 1 name"
          command: |
            echo "Test job 1"
          shell: /bin/bash
      - test_command_1:
          run_param: "4"

  test_1_4:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 1 name"
          command: |
            echo "Test job 1"
          shell: /bin/bash
      - test_command_1:
          run_param: "5"

  test_1_5:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 1 name"
          command: |
            echo "Test job 1"
          shell: /bin/bash
      - test_command_1:
          run_param: "6"

  test_2:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 2 name"
          command: |
            echo "Test job 2"
          shell: /bin/bash
      - test_command_2:
          run_param: "1.6"

  test_3:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: "Test job 3 name"
          command: |
            echo "Test job 3"
          shell: /bin/bash
      - test_command_3:
          run_param: "1.64"

  test_4:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: "Test job 4 name"
          command: |
            echo "Test job 4"
          shell: /bin/bash
      - test_command_4:
          run_param: "1"

  test_5:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: "Test job 5 name"
          command: |
            echo "Test job 5"
          shell: /bin/bash
      - test_command_5

  test_6:
    executor:
      name: macos-ios-executor-xcode11
      executor_env_var_2: "Executor env var 2 from job"
    environment:
      JOB_ENV_VAR_1: "Job env var 1"
      JOB_ENV_VAR_2: $EXC_ENV_VAR_5
      JOB_ENV_VAR_3: "Job env var 3"
      JOB_ENV_VAR_4: $EXC_ENV_VAR_3
      JOB_ENV_VAR_5: $EXC_ENV_VAR_4
      JOB_ENV_VAR_6: $executor_env_var_1
      JOB_ENV_VAR_7: $executor_env_var_2
    steps:
      - run:
          name: "Test job 6 name"
          command: |
            echo "Test job 6"
          shell: /bin/bash
      - test_command_6

  test_7:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: "Test job 7 name"
          command: |
            echo "Test job 7"
          shell: /bin/bash
      - test_command_7

  test_8:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 8"
          command: |
            echo "Test job 8"
          shell: /bin/bash
      - test_command_8

  test_9:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 9"
          command: |
            echo "Test job 9"
          shell: /bin/bash
      - test_command_9

  test_10:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 10"
          command: |
            echo "Test job 10"
          shell: /bin/bash
      - test_command_10

  test_11:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 11"
          command: |
            echo "Test job 11"
          shell: /bin/bash
      - test_command_11

  test_12:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 12"
          command: |
            echo "Test job 12"
          shell: /bin/bash
      - test_command_12

  test_13:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 13"
          command: |
            echo "Test job 13"
          shell: /bin/bash
      - test_command_13

  test_14:
    executor: macos-ios-executor-xcode11
    steps:
      - run:
          name: "Test job 14"
          command: |
            echo "Test job 14"
          shell: /bin/bash
      - test_command_14

workflows:
  version: 2
  test_workflow:
    jobs:
      - test_1
#      - test_1_1
#      - test_1_2
#      - test_1_3
#      - test_1_4
#      - test_1_5
      - test_2
      - test_3
      - test_4
#      - test_5
#      - test_6
#      - test_7
#      - test_8
#      - test_9
#      - test_10
#      - test_11
#      - test_12
#      - test_13
#      - test_14
