version: 2.1

aliases:
  - &check_status_1
      echo $status_1
      if [[ $status_1 -eq 0 ]]; then
        echo "Exit code is 0 - Pass"
        exit 0
      elif [[ $status_1 -eq 127 ]]; then
        echo "Exit code is 127 - Known issue"
        exit 0
      else
        exit 1
      fi

  - &check_status_2
      echo $status_2
      if [[ $status_2 -eq 0 ]]; then
      echo "Exit code is 0 - Pass"
      exit 0
      elif [[ $status_2 -eq 127 ]]; then
      echo "Exit code is 127 - Known issue"
      exit 0
      else
      exit 1
      fi


commands:
  check_exit_code_1:
    description: Check exit code 1 description
    parameters:
      exit_code:
        type: string
    steps:
      - run:
          name: "Check exit code 1 name"
          command: |
            echo "Status: << parameters.exit_code >>"
            if [[ << parameters.exit_code >> -eq 0 ]]; then
              echo "Exit code is 0 - Pass"
              exit 0
            elif [[ << parameters.exit_code >> -eq 127 ]]; then
              echo "Exit code is 127 - Known issue"
              exit 0
            else
              echo "Unexpected exit code: << parameters.exit_code >> - Fail"
              exit 1
            fi
          shell: /bin/bash

  check_exit_code_2:
    description: Check exit code 2 description
    steps:
      - run:
          name: "Check exit code 2 name"
          command: |
            echo "Status: $status_4"
            if [[ $status_4 -eq 0 ]]; then
              echo "Exit code is 0 - Pass"
              exit 0
            elif [[ $status_4 -eq 127 ]]; then
              echo "Exit code is 127 - Known issue"
              exit 0
            else
              echo "Unexpected exit code: $status_4 - Fail"
              exit 1
            fi
          shell: /bin/bash

  check_exit_code_3:
    description: Check exit code 3 description
    steps:
      - run:
          name: "Check exit code 3 name"
          command: |
            echo "Status: $status_4_1"
            if [[ $status_4_1 -eq 0 ]]; then
              echo "Exit code is 0 - Pass"
              exit 0
            elif [[ $status_4_1 -eq 127 ]]; then
              echo "Exit code is 127 - Known issue"
              exit 0
            else
              echo "Unexpected exit code: $status_4_1 - Fail"
              exit 1
            fi
          shell: /bin/bash

  test_command_1:
    description: Test command 1 description
    steps:
      - run:
          name: "Test command 1 name"
          command: |
            cd /tehrto
            status=$?
            echo $status
            if [[ $status -eq 0 ]]; then
              echo "Exit code is 0 - Pass"
              exit 0
            elif [[ $status -eq 127 ]]; then
              echo "Exit code is 127 - Known issue"
              exit 0
            else
              echo "Unexpected exit code: $status - Fail"
              exit 1
            fi
          shell: /bin/bash

#  test_command_2:
#    description: Test command 2 description
#    steps:
#      - run:
#          name: "Test command 2 name"
#          command: |
#            date-dfdg
#            export status_1=$?
#            <<: *check_status_1
#          shell: /bin/bash
#
#  test_command_2_1:
#    description: Test command 2 description
#    steps:
#      - run:
#          name: "Test command 2 name"
#          command: |
#            date-dfdg
#            echo "export status_2=$?" >> $BASH_ENV
#            <<: *check_status_2
#          shell: /bin/bash

  test_command_3:
    description: Test command 3 description
    steps:
      - run:
          name: "Test command 3 name"
          command: |
            date-dfdg
            export status_3=$?
            echo "export status: $status_3"
          shell: /bin/bash
      - check_exit_code_1:
          exit_code: $status_3

  test_command_3_1:
    description: Test command 3 description
    steps:
      - run:
          name: "Test command 3 name"
          command: |
            date-dfdg
            echo "export status_3_1=$?" >> $BASH_ENV
            source $BASH_ENV
            echo "export status: $status_3_1"
          shell: /bin/bash
      - check_exit_code_1:
          exit_code: $status_3_1

  test_command_4:
    description: Test command 4 description
    steps:
      - run:
          name: "Test command 4 name"
          command: |
            set +e
            cd /ergerio
            export status_4=$?
            echo "export status: $status_4"
      - check_exit_code_2

  test_command_4_1:
    description: Test command 4 description
    steps:
      - run:
          name: "Test command 4 name"
          command: |
            set +e
            cd /ergoier
            echo "export status_4_1=$?" >> $BASH_ENV
            source $BASH_ENV
            echo "export status: $status_4_1"
      - check_exit_code_3

jobs:
  test_1:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: "Test job 1"
          command: |
            echo "Call test_command"
          shell: /bin/bash
      - test_command_1

  test_2:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - test_command_2

  test_2_1:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - test_command_2_1

  test_3:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - test_command_3

  test_3_1:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - test_command_3_1

  test_4:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - test_command_4

  test_4_1:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - test_command_4_1

workflows:
  version: 2
  test_workflow:
    jobs:
      - test_1
#      - test_2
#      - test_2_1
#      - test_3
      - test_3_1
#      - test_4
      - test_4_1
